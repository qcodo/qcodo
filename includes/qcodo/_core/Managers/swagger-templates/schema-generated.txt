<?php
	namespace %s\Models\Schema;
	use QJsonBaseClass;
	use QDateTime;
	use stdClass;

	/**
	 * @class %s%s
	 * @extends QJsonBaseClass
%s
	 */
	class %s%s extends QJsonBaseClass {
		protected static $_Model = array(
%s
		);
%s
		/**
		 * Creates a %s%s from a JSON string or JSON-decoded stdClass object
		 *
		 * @param mixed $json can be a string-based JSON or a stdClass
		 * @return %s%s
		 * @throws
		 */
		public static function JsonDecode($json) {
			return self::JsonDecodeForClass(get_called_class(), $json);
		}

		/**
		 * Creates an array of %s%s from a JSON string or an array of JSON-decoded stdClass objects
		 *
		 * @param mixed $json can be a string-based JSON or an array of stdClass
		 * @return %s%s[]
		 * @throws
		 */
		public static function JsonDecodeArray($json) {
			return self::JsonDecodeArrayForType(get_called_class(), $json);
		}



/*
		/**
		 *
		 * @return Schema\%s%s
		 *
		public function GetSchema() {
			$%s = new Schema\%s%s();

%s

			return $%s;
		}

		/**
		 * @param Schema\%s%s $%s
		 *
		protected function UpdateFromSchema(Schema\%s%s $%s) {
%s

			$this->Save();
		}
*/
	}
